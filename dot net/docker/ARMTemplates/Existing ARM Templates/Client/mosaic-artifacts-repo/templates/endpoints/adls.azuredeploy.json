{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
        "type": "string",
        "minLength": 3,
        "maxLength": 10,
        "defaultValue": "mosaic",
        "metadata": {
            "description": "The prefix to use for resources within the resource group"
        }
    },
    "storageSku": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
            "Standard_LRS",
            "Standard_ZRS",
            "Standard_GRS",
            "Standard_RAGRS"
        ],
        "metadata": {
            "description": "Defines the type of storage account to use for the data lake store"
        }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "vnet resource."
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "vnet address prefix."
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "snet address prefix."
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "snet name."
      }
    },
    "privateEndpointName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "private endpoint name."
      }
    }
    // "newOrExisting": {
    //   "type": "string",
    //   "allowedValues": [
    //     "new",
    //     "existing"
    //   ]
    // }
  },
  "variables": {
    "storageAccountApiVersion": "[utils.apiVersion('Microsoft.Storage', 'storageAccounts')]",
    "storageAccountName": "[parameters('storageAccountName')]",
    "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
    "vnetName": "[parameters('vnetName')]",
    "vnetAddressPrefix": "[parameters('vnetAddressPrefix')]",
    "subnet1Prefix": "[parameters('subnet1Prefix')]",
    "subnet1Name": "[parameters('subnet1Name')]",
    "privateEndpointName": "[parameters('privateEndpointName')]",
    "privateDnsZoneName": "[concat('privatelink', environment().suffixes.storage)]",
    "pvtendpointdnsgroupname": "[concat(variables('privateEndpointName'),'/adlsdnsgroupname')]",
    "networkInterfaceName": "[concat(variables('storageAccountName'),'-netint')]"
  },
  "functions": [
    {
        "namespace": "utils",
        "members": {
            "apiVersion": {
                "parameters": [
                    {
                        "name": "providerNamespace",
                        "type": "string"
                    },
                    {
                        "name": "resourceType",
                        "type": "string"
                    }
                ],
                "output": {
                    "type": "string",
                    "value": "[providers(parameters('providerNamespace'), parameters('resourceType')).apiVersions[0]]"
                }
            },
            "uniqueName": {
                "parameters": [
                    {
                        "name": "resourcePrefix",
                        "type": "string"
                    },
                    {
                        "name": "resourceSuffix",
                        "type": "string"
                    }
                ],
                "output": {
                    "type": "string",
                    "value": "[concat(parameters('resourcePrefix'), uniqueString(resourceGroup().id), parameters('resourceSuffix'))]"
                }
            }
        }
    }
  ],
  "resources": [
    {
        // "condition": "[equals(parameters('newOrExisting'),'new')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "[variables('storageAccountApiVersion')]",
        "location": "[resourceGroup().location]",
        "name": "[variables('storageAccountName')]",
        "kind": "StorageV2",
        "sku": {
            "name": "[parameters('storageSku')]"
        },
        "properties": {
            "encryption": {
                "keySource": "Microsoft.Storage",
                "services": {
                    "blob": {
                        "enabled": true
                    },
                    "file": {
                        "enabled": true
                    }
                }
            },
            "isHnsEnabled": true,
            "supportsHttpsTrafficOnly": true
        }
    }
    // {
    //   "type": "Microsoft.Network/virtualNetworks",
    //   "apiVersion": "2020-06-01",
    //   "name": "[variables('vnetName')]",
    //   "location": "[parameters('location')]",
    //   "properties": {
    //     "addressSpace": {
    //       "addressPrefixes": [
    //         "[variables('vnetAddressPrefix')]"
    //       ]
    //     }
    //   },
    //   "resources": [
    //     {
    //       "type": "subnets",
    //       "apiVersion": "2020-06-01",
    //       "name": "[variables('subnet1Name')]",
    //       "location": "[parameters('location')]",
    //       "dependsOn": [
    //         "[variables('vnetName')]"
    //       ],
    //       "properties": {
    //         "addressPrefix": "[variables('subnet1Prefix')]",
    //         "privateEndpointNetworkPolicies": "Disabled"
    //       }
    //     }
    //   ]
    // },
    // {
    //   "type": "Microsoft.Network/privateEndpoints",
    //   "apiVersion": "2020-06-01",
    //   "name": "[variables('privateEndpointName')]",
    //   "location": "[parameters('location')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    //     "[variables('storageAccountName')]"
    //   ],
    //   "properties": {
    //     "subnet": {
    //       "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnet1Name'))]"
    //     },
    //     "privateLinkServiceConnections": [
    //       {
    //         "name": "[variables('privateEndpointName')]",
    //         "properties": {
    //           "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts',variables('storageAccountName'))]",
    //           "groupIds": [
    //             "dfs"
    //           ]
    //         }
    //       }
    //     ]
    //   }
    // },
    // {
    //   "type": "Microsoft.Network/privateDnsZones",
    //   "apiVersion": "2020-01-01",
    //   "name": "[variables('privateDnsZoneName')]",
    //   "location": "global",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
    //   ],
    //   "properties": ""
    // },
    // {
    //   "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
    //   "apiVersion": "2020-01-01",
    //   "name": "[concat(variables('privateDnsZoneName'), '/', variables('privateDnsZoneName'), '-link')]",
    //   "location": "global",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
    //     "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
    //   ],
    //   "properties": {
    //     "registrationEnabled": false,
    //     "virtualNetwork": {
    //       "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
    //     }
    //   }
    // },
    // {
    //   "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
    //   "apiVersion": "2020-06-01",
    //   "name": "[variables('pvtendpointdnsgroupname')]",
    //   "location": "[parameters('location')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
    //     "[variables('privateEndpointName')]"
    //   ],
    //   "properties": {
    //     "privateDnsZoneConfigs": [
    //       {
    //         "name": "config1",
    //         "properties": {
    //           "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
    //         }
    //       }
    //     ]
    //   }
    // }
    // {
    //   "type": "Microsoft.Network/publicIPAddresses",
    //   "apiVersion": "2020-06-01",
    //   "name": "[variables('publicIpAddressName')]",
    //   "location": "[parameters('location')]",
    //   "tags": {
    //     "displayName": "[variables('publicIpAddressName')]"
    //   },
    //   "properties": {
    //     "publicIPAllocationMethod": "Dynamic",
    //     "dnsSettings": {
    //       "domainNameLabel": "[tolower(variables('vmName'))]"
    //     }
    //   }
    // },
    // {
    //   "type": "Microsoft.Network/networkInterfaces",
    //   "apiVersion": "2020-06-01",
    //   "name": "[variables('networkInterfaceName')]",
    //   "location": "[parameters('location')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]",
    //     "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
    //   ],
    //   "tags": {
    //     "displayName": "[variables('networkInterfaceName')]"
    //   },
    //   "properties": {
    //     "ipConfigurations": [
    //       {
    //         "name": "ipConfig1",
    //         "properties": {
    //           "privateIPAllocationMethod": "Dynamic",
    //           "publicIPAddress": {
    //             "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
    //           },
    //           "subnet": {
    //             "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnet1Name'))]"
    //           }
    //         }
    //       }
    //     ]
    //   }
    // }
  ],
  "outputs": {
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        },
        "storageAccountConnectionString": {
            "type": "string",
            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountResourceId'), variables('storageAccountApiVersion')).keys[0].value)]"
        }
        // "privateEndpointNetworkInterface": {
        //   "type": "string",
        //   "value": "[reference(concat('Microsoft.Network/privateEndpoints/', variables('privateEndpointName'))).networkInterfaces[0].id]"
        // }
    }
}